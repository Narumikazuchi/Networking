<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Narumikazuchi.Networking.Sockets</name>
    </assembly>
    <members>
        <member name="T:Narumikazuchi.Networking.Sockets.ClientBase`1">
            <summary>
            Provides the shared base functionality for sending data to an <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/>.
            </summary>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.ClientBase`1.Connected">
            <summary>
            Gets whether the <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/> is connected to an <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/> at the moment.
            </summary>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ClientBase`1.#ctor(System.Int32@,System.Int32@,Narumikazuchi.Networking.Sockets.IClientDataProcessor{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Narumikazuchi.Networking.Sockets.ClientBase`1"/> class.
            </summary>
            <exception cref="T:System.ArgumentException"/>
            <exception cref="T:System.ArgumentOutOfRangeException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ClientBase`1.SerializeToBytes(`0)">
            <summary>
            Serializes the specified <typeparamref name="TData"/> into a <see cref="T:System.Byte"/>[] representation, which in turn can be send over the socket connection.
            </summary>
            <param name="data">The data to serialize.</param>
            <returns>The <see cref="T:System.Byte"/>[] representation of the specified <typeparamref name="TData"/></returns>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ClientBase`1.SerializeFromBytes(System.Byte[])">
            <summary>
            Serializes the specified <see cref="T:System.Byte"/>[] representation back into it's <typeparamref name="TData"/> object.
            </summary>
            <param name="bytes">The <see cref="T:System.Byte"/>[] representation to serialize.</param>
            <returns>The <typeparamref name="TData"/> object serialized from the specified <see cref="T:System.Byte"/>[] representation</returns>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ClientBase`1.InitiateConnection">
            <summary>
            Initiates the data receive pipeline.
            </summary>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ClientBase`1.InitiateDisconnect(System.Boolean@)">
            <summary>
            Initiates and performs the disconnect from the server socket.
            </summary>
            <param name="raiseEvent">Whether or not the <see cref="E:Narumikazuchi.Networking.Sockets.IClient`1.ConnectionClosed"/> event shall be raised.</param>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ClientBase`1.InitiateSend(`0)">
            <summary>
            Initiates the process for sending data over the socket connection to the server.
            </summary>
            <param name="data">The data to send to the server.</param>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.ClientBase`1.Socket">
            <summary>
            Gets the <see cref="T:System.Net.Sockets.Socket"/> that this <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/> uses to send data to an <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/>.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ClientBase`1.Connect(System.Net.IPAddress)">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ClientBase`1.Disconnect">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ClientBase`1.Send(`0)">
            <inheritdoc/>
        </member>
        <member name="E:Narumikazuchi.Networking.Sockets.ClientBase`1.ConnectionEstablished">
            <inheritdoc/>
        </member>
        <member name="E:Narumikazuchi.Networking.Sockets.ClientBase`1.ConnectionClosed">
            <inheritdoc/>
        </member>
        <member name="E:Narumikazuchi.Networking.Sockets.ClientBase`1.DataReceived">
            <inheritdoc/>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.ClientBase`1.Port">
            <inheritdoc/>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.ClientBase`1.Guid">
            <inheritdoc/>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.ClientBase`1.BufferSize">
            <inheritdoc/>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.ClientBase`1.DataProcessor">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ClientBase`1.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:Narumikazuchi.Networking.Sockets.ServerBase`1">
            <summary>
            Provides the shared base functionality for sending data to multiple <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/> objects.
            </summary>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.ServerBase`1.IsRunning">
            <summary>
            Gets whether the <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/> allows connections from <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/> objects.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ServerBase`1.#ctor(System.Int32@,System.Int32@,Narumikazuchi.Networking.Sockets.IServerDataProcessor{`0},System.Func{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Narumikazuchi.Networking.Sockets.ServerBase`1"/> class.
            </summary>
            <exception cref="T:System.ArgumentException"/>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:System.ArgumentOutOfRangeException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ServerBase`1.SerializeToBytes(`0)">
            <summary>
            Serializes the specified <typeparamref name="TData"/> into a <see cref="T:System.Byte"/>[] representation, which in turn can be send over the socket connection.
            </summary>
            <param name="data">The data to serialize.</param>
            <returns>The <see cref="T:System.Byte"/>[] representation of the specified <typeparamref name="TData"/></returns>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ServerBase`1.SerializeFromBytes(System.Byte[])">
            <summary>
            Serializes the specified <see cref="T:System.Byte"/>[] representation back into it's <typeparamref name="TData"/> object.
            </summary>
            <param name="bytes">The <see cref="T:System.Byte"/>[] representation to serialize.</param>
            <returns>The <typeparamref name="TData"/> object serialized from the specified <see cref="T:System.Byte"/>[] representation</returns>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ServerBase`1.InitiateStart">
            <summary>
            Initiates the connections accept and data receive pipeline.
            </summary>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ServerBase`1.InitiateStop">
            <summary>
            Initiates and performs the disconnect from all sockets.
            </summary>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ServerBase`1.InitiateDisconnect(System.Guid@)">
            <summary>
            Initiates and performs the disconnect from the specified client socket.
            </summary>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ServerBase`1.InitiateSend(`0,System.Guid)">
            <summary>
            Initiates the process for sending data over the socket connection to the specified client.
            </summary>
            <param name="data">The data to send to the client.</param>
            <param name="client">The guid associated with an <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/>.</param>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ServerBase`1.InitiateBroadcast(`0)">
            <summary>
            Initiates the process for sending data over the socket connection to the all connected clients.
            </summary>
            <param name="data">The data to send to the clients.</param>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.ServerBase`1.Socket">
            <summary>
            Gets the <see cref="T:System.Net.Sockets.Socket"/> that this <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/> uses to send data to any <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/>.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ServerBase`1.Start">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ServerBase`1.Stop">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ServerBase`1.Disconnect(System.Guid@)">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ServerBase`1.Send(`0,System.Guid@)">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ServerBase`1.Broadcast(`0)">
            <inheritdoc/>
        </member>
        <member name="E:Narumikazuchi.Networking.Sockets.ServerBase`1.ClientConnected">
            <inheritdoc/>
        </member>
        <member name="E:Narumikazuchi.Networking.Sockets.ServerBase`1.ClientDisconnected">
            <inheritdoc/>
        </member>
        <member name="E:Narumikazuchi.Networking.Sockets.ServerBase`1.DataReceived">
            <inheritdoc/>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.ServerBase`1.Port">
            <inheritdoc/>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.ServerBase`1.BufferSize">
            <inheritdoc/>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.ServerBase`1.Clients">
            <inheritdoc/>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.ServerBase`1.DataProcessor">
            <inheritdoc/>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.ServerBase`1.AcceptCondition">
            <inheritdoc/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ServerBase`1.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:Narumikazuchi.Networking.Sockets.Client">
            <summary>
            Represents an <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/>, which communicates with <see cref="T:Narumikazuchi.Networking.Sockets.Server"/> objects through arrays of <see cref="T:System.Byte"/>.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Client.CreateClient(System.Int32@,System.Int32@)">
            <summary>
            Creates a new instance of the <see cref="T:Narumikazuchi.Networking.Sockets.Client"/> class.
            </summary>
            <param name="port">The port through which the connection shall be established.</param>
            <param name="bufferSize">The size of the data buffer for received data in bytes.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Client.CreateClient(System.Int32@,System.Int32@,Narumikazuchi.Networking.Sockets.ClientDataProcessor)">
            <summary>
            Creates a new instance of the <see cref="T:Narumikazuchi.Networking.Sockets.Client"/> class.
            </summary>
            <param name="port">The port through which the connection shall be established.</param>
            <param name="bufferSize">The size of the data buffer for received data in bytes.</param>
            <param name="processor">The processor, who handles the incoming <see cref="T:System.Byte"/>[] objects.</param>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:System.ArgumentOutOfRangeException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Client.Disconnect(System.Boolean@)">
            <summary>
            Disconnects the <see cref="T:Narumikazuchi.Networking.Sockets.Client"/> from the <see cref="T:Narumikazuchi.Networking.Sockets.Server"/>.
            </summary>
            <param name="raiseEvent">Whether or not to raise the <see cref="E:Narumikazuchi.Networking.Sockets.IClient`1.ConnectionClosed"/> event.</param>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Client.Connect(System.Net.IPAddress)">
            <inheritdoc/>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Client.Disconnect">
            <inheritdoc/>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Client.Send(System.Byte[])">
            <inheritdoc/>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Client.SerializeToBytes(System.Byte[])">
            <inheritdoc/>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Client.SerializeFromBytes(System.Byte[])">
            <inheritdoc/>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="T:Narumikazuchi.Networking.Sockets.ClientDataProcessor">
            <summary>
            Provides the blueprint for data processing of an <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/>.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ClientDataProcessor.#ctor(Narumikazuchi.Networking.Sockets.Client)">
            <summary>
            Initializes a new instance of the <see cref="T:Narumikazuchi.Networking.Sockets.ClientDataProcessor"/> class.
            </summary>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ClientDataProcessor.ProcessReceivedData(System.Byte[])">
            <inheritdoc/>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ClientDataProcessor.Disconnect">
            <summary>
            Disconnects the <see cref="P:Narumikazuchi.Networking.Sockets.ClientDataProcessor.Client"/> from the <see cref="T:Narumikazuchi.Networking.Sockets.Server"/>.
            </summary>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.ClientDataProcessor.Client">
            <summary>
            Gets or sets the <see cref="P:Narumikazuchi.Networking.Sockets.ClientDataProcessor.Client"/> associated with this processor.
            </summary>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="T:Narumikazuchi.Networking.Sockets.Server">
            <summary>
            Represents an <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/>, which communicates with <see cref="T:Narumikazuchi.Networking.Sockets.Client"/> objects through arrays of <see cref="T:System.Byte"/>s.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Server.CreateServer(System.Int32@,System.Int32@,System.Func{System.Boolean})">
            <summary>
            Creates a new instance of the <see cref="T:Narumikazuchi.Networking.Sockets.Server"/> class.
            </summary>
            <param name="port">The port through which the connections shall be established.</param>
            <param name="bufferSize">The size of the data buffer for received data in bytes.</param>
            <param name="acceptCondition">The condition for a connection <see cref="T:Narumikazuchi.Networking.Sockets.Client"/> to be accepted.</param>
            <returns>A new <see cref="T:Narumikazuchi.Networking.Sockets.Server"/> instance with the specified parameters</returns>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:System.ArgumentOutOfRangeException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Server.CreateServer(System.Int32@,System.Int32@,Narumikazuchi.Networking.Sockets.ServerDataProcessor,System.Func{System.Boolean})">
            <summary>
            Creates a new instance of the <see cref="T:Narumikazuchi.Networking.Sockets.Server"/> class.
            </summary>
            <param name="port">The port through which the connections shall be established.</param>
            <param name="bufferSize">The size of the data buffer for received data in bytes.</param>
            <param name="processor">The processor, who handles the incoming <see cref="T:System.Byte"/>[] objects.</param>
            <param name="acceptCondition">The condition for a connection <see cref="T:Narumikazuchi.Networking.Sockets.Client"/> to be accepted.</param>
            <returns>A new <see cref="T:Narumikazuchi.Networking.Sockets.Server"/> instance with the specified parameters</returns>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:System.ArgumentOutOfRangeException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Server.Start">
            <inheritdoc/>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Server.Stop">
            <inheritdoc/>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Server.Disconnect(System.Guid@)">
            <inheritdoc/>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Server.Send(System.Byte[],System.Guid@)">
            <inheritdoc/>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Server.Broadcast(System.Byte[])">
            <inheritdoc/>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Server.SerializeToBytes(System.Byte[])">
            <inheritdoc/>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Server.SerializeFromBytes(System.Byte[])">
            <inheritdoc/>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="T:Narumikazuchi.Networking.Sockets.ServerDataProcessor">
            <summary>
            Provides the blueprint for data processing of an <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/>.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ServerDataProcessor.#ctor(Narumikazuchi.Networking.Sockets.Server)">
            <summary>
            Initializes a new instance of the <see cref="T:Narumikazuchi.Networking.Sockets.ServerDataProcessor"/> class.
            </summary>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ServerDataProcessor.ProcessReceivedData(System.Byte[],System.Guid@)">
            <inheritdoc/>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ServerDataProcessor.DisconnectClient(System.Guid@)">
            <summary>
            Disconnects the <see cref="T:Narumikazuchi.Networking.Sockets.Client"/> from the <see cref="P:Narumikazuchi.Networking.Sockets.ServerDataProcessor.Server"/> instance.
            </summary>
            <param name="client">The client to disconnect.</param>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.ServerDataProcessor.Server">
            <summary>
            Gets or sets the <see cref="T:Narumikazuchi.Networking.Sockets.Server`1"/> associated with this processor.
            </summary>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="T:Narumikazuchi.Networking.Sockets.Client`1">
            <summary>
            Represents an <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/>, which communicates with <see cref="T:Narumikazuchi.Networking.Sockets.Server`1"/> objects through an <see cref="T:Narumikazuchi.Serialization.Bytes.IByteSerializable"/> message class.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Client`1.CreateClient(System.Int32@,System.Int32@)">
            <summary>
            Creates a new instance of the <see cref="T:Narumikazuchi.Networking.Sockets.Client`1"/> class.
            </summary>
            <param name="port">The port through which the connection shall be established.</param>
            <param name="bufferSize">The size of the data buffer for received data in bytes.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Client`1.CreateClient(System.Int32@,System.Int32@,Narumikazuchi.Networking.Sockets.ClientDataProcessor{`0})">
            <summary>
            Creates a new instance of the <see cref="T:Narumikazuchi.Networking.Sockets.Client`1"/> class.
            </summary>
            <param name="port">The port through which the connection shall be established.</param>
            <param name="bufferSize">The size of the data buffer for received data in bytes.</param>
            <param name="processor">The processor, who handles the incoming <typeparamref name="TMessage"/> objects.</param>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:System.ArgumentOutOfRangeException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Client`1.Disconnect(System.Boolean@)">
            <summary>
            Disconnects the <see cref="T:Narumikazuchi.Networking.Sockets.Client`1"/> from the <see cref="T:Narumikazuchi.Networking.Sockets.Server`1"/>.
            </summary>
            <param name="raiseEvent">Whether or not to raise the <see cref="E:Narumikazuchi.Networking.Sockets.IClient`1.ConnectionClosed"/> event.</param>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Client`1.Connect(System.Net.IPAddress)">
            <inheritdoc/>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Client`1.Disconnect">
            <inheritdoc/>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Client`1.Send(`0)">
            <inheritdoc/>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Client`1.SerializeToBytes(`0)">
            <inheritdoc/>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Client`1.SerializeFromBytes(System.Byte[])">
            <inheritdoc/>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="T:Narumikazuchi.Networking.Sockets.ClientDataProcessor`1">
            <summary>
            Provides the blueprint for data processing of an <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/>.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ClientDataProcessor`1.#ctor(Narumikazuchi.Networking.Sockets.Client{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Narumikazuchi.Networking.Sockets.ClientDataProcessor`1"/> class.
            </summary>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ClientDataProcessor`1.ProcessReceivedData(`0)">
            <inheritdoc/>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ClientDataProcessor`1.Disconnect">
            <summary>
            Disconnects the <see cref="T:Narumikazuchi.Networking.Sockets.Client`1"/> from the <see cref="T:Narumikazuchi.Networking.Sockets.Server`1"/>.
            </summary>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.ClientDataProcessor`1.Client">
            <summary>
            Gets or sets the <see cref="T:Narumikazuchi.Networking.Sockets.Client`1"/> associated with this processor.
            </summary>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="T:Narumikazuchi.Networking.Sockets.Server`1">
            <summary>
            Represents an <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/>, which communicates with <see cref="T:Narumikazuchi.Networking.Sockets.Client`1"/> objects through an <see cref="T:Narumikazuchi.Serialization.Bytes.IByteSerializable"/> message class.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Server`1.CreateServer(System.Int32@,System.Int32@,System.Func{System.Boolean})">
            <summary>
            Creates a new instance of the <see cref="T:Narumikazuchi.Networking.Sockets.Server`1"/> class.
            </summary>
            <param name="port">The port through which the connections shall be established.</param>
            <param name="bufferSize">The size of the data buffer for received data in bytes.</param>
            <param name="acceptCondition">The condition for a connection <see cref="T:Narumikazuchi.Networking.Sockets.Client`1"/> to be accepted.</param>
            <returns>A new <see cref="T:Narumikazuchi.Networking.Sockets.Server`1"/> instance with the specified parameters</returns>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:System.ArgumentOutOfRangeException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Server`1.CreateServer(System.Int32@,System.Int32@,Narumikazuchi.Networking.Sockets.ServerDataProcessor{`0},System.Func{System.Boolean})">
            <summary>
            Creates a new instance of the <see cref="T:Narumikazuchi.Networking.Sockets.Server`1"/> class.
            </summary>
            <param name="port">The port through which the connections shall be established.</param>
            <param name="bufferSize">The size of the data buffer for received data in bytes.</param>
            <param name="processor">The processor, who handles the incoming <typeparamref name="TMessage"/> objects.</param>
            <param name="acceptCondition">The condition for a connection <see cref="T:Narumikazuchi.Networking.Sockets.Client`1"/> to be accepted.</param>
            <returns>A new <see cref="T:Narumikazuchi.Networking.Sockets.Server`1"/> instance with the specified parameters</returns>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:System.ArgumentOutOfRangeException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Server`1.Start">
            <inheritdoc/>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Server`1.Stop">
            <inheritdoc/>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Server`1.Disconnect(System.Guid@)">
            <inheritdoc/>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Server`1.Send(`0,System.Guid@)">
            <inheritdoc/>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Server`1.Broadcast(`0)">
            <inheritdoc/>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Server`1.SerializeToBytes(`0)">
            <inheritdoc/>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.Server`1.SerializeFromBytes(System.Byte[])">
            <inheritdoc/>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="T:Narumikazuchi.Networking.Sockets.ServerDataProcessor`1">
            <summary>
            Provides the blueprint for data processing of an <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/>.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ServerDataProcessor`1.#ctor(Narumikazuchi.Networking.Sockets.Server{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Narumikazuchi.Networking.Sockets.ServerDataProcessor`1"/> class.
            </summary>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ServerDataProcessor`1.ProcessReceivedData(`0,System.Guid@)">
            <inheritdoc/>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ServerDataProcessor`1.DisconnectClient(System.Guid@)">
            <summary>
            Disconnects the <see cref="T:Narumikazuchi.Networking.Sockets.Client`1"/> from the <see cref="T:Narumikazuchi.Networking.Sockets.Server`1"/> instance.
            </summary>
            <param name="client">The client to disconnect.</param>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"/>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.ServerDataProcessor`1.Server">
            <summary>
            Gets or sets the <see cref="T:Narumikazuchi.Networking.Sockets.Server`1"/> associated with this processor.
            </summary>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="T:Narumikazuchi.Networking.Sockets.ConnectionType">
            <summary>
            Specifies the <see cref="T:Narumikazuchi.Networking.Sockets.ConnectionType"/> that occurred.
            </summary>
        </member>
        <member name="F:Narumikazuchi.Networking.Sockets.ConnectionType.ConnectionEstablished">
            <summary>
            A connection was established.
            </summary>
        </member>
        <member name="F:Narumikazuchi.Networking.Sockets.ConnectionType.ConnectionClosed">
            <summary>
            A connection was closed.
            </summary>
        </member>
        <member name="F:Narumikazuchi.Networking.Sockets.ConnectionType.ConnectionLost">
            <summary>
            A connection was lost.
            </summary>
        </member>
        <member name="T:Narumikazuchi.Networking.Sockets.ConnectionEventArgs">
            <summary>
            Contains the connected or disconnected client.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.ConnectionEventArgs.#ctor(System.Guid,Narumikazuchi.Networking.Sockets.ConnectionType@)">
            <summary>
            Initializes a new instance of the <see cref="T:Narumikazuchi.Networking.Sockets.ConnectionEventArgs"/> class.
            </summary>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.ConnectionEventArgs.Client">
            <summary>
            Gets or sets the client <see cref="T:System.Net.Sockets.Socket"/> that connected/disconnected.
            </summary>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.ConnectionEventArgs.EventType">
            <summary>
            Gets or sets if the connection was established, closed or lost.
            </summary>
        </member>
        <member name="T:Narumikazuchi.Networking.Sockets.DataReceivedEventArgs`1">
            <summary>
            Contains the <typeparamref name="TData"/> that has been received by either an <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/> or an <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/>.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.DataReceivedEventArgs`1.#ctor(`0,System.Guid@)">
            <summary>
            Initializes a new instance of the <see cref="T:Narumikazuchi.Networking.Sockets.DataReceivedEventArgs`1"/> class.
            </summary>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.DataReceivedEventArgs`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Narumikazuchi.Networking.Sockets.DataReceivedEventArgs`1"/> class.
            </summary>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.DataReceivedEventArgs`1.FromClient">
            <summary>
            Gets the <see cref="T:System.Guid"/> of the <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/> the was received from. This is <see langword="null"/> if the <typeparamref name="TData"/> was received from an <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/>.
            </summary>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.DataReceivedEventArgs`1.Data">
            <summary>
            Gets the <typeparamref name="TData"/> that has been received.
            </summary>
        </member>
        <member name="T:Narumikazuchi.Networking.Sockets.MaximumAttemptsExceededException">
            <summary>
            Represents errors which happen when connecting two endpoints.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.MaximumAttemptsExceededException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Narumikazuchi.Networking.Sockets.MaximumAttemptsExceededException"/> class.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.MaximumAttemptsExceededException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Narumikazuchi.Networking.Sockets.MaximumAttemptsExceededException"/> class.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.MaximumAttemptsExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Narumikazuchi.Networking.Sockets.MaximumAttemptsExceededException"/> class.
            </summary>
        </member>
        <member name="T:Narumikazuchi.Networking.Sockets.NotConnectedException">
            <summary>
            Represents the error which occurs when two endpoints are not connected.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.NotConnectedException.#ctor(System.Net.Sockets.Socket)">
            <summary>
            Initializes a new instance of the <see cref="T:Narumikazuchi.Networking.Sockets.NotConnectedException"/> class.
            </summary>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.NotConnectedException.#ctor(System.Net.Sockets.Socket,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Narumikazuchi.Networking.Sockets.NotConnectedException"/> class.
            </summary>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.NotConnectedException.#ctor(System.Net.Sockets.Socket,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Narumikazuchi.Networking.Sockets.NotConnectedException"/> class.
            </summary>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.NotConnectedException.Endpoint">
            <summary>
            The socket which caused the exception.
            </summary>
        </member>
        <member name="T:Narumikazuchi.Networking.Sockets.IClient`1">
            <summary>
            Represents the base functionality of a socket client.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.IClient`1.Connect(System.Net.IPAddress)">
            <summary>
            Connects the <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/> to the specified IP-Address.
            </summary>
            <param name="address">The address to connect to.</param>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.IClient`1.Disconnect">
            <summary>
            Disconnects the <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/> from it's current connection to an <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/>.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.IClient`1.Send(`0)">
            <summary>
            Sends the specified <typeparamref name="TData"/> to the connected <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/>.
            </summary>
            <param name="data">The data to send.</param>
        </member>
        <member name="E:Narumikazuchi.Networking.Sockets.IClient`1.ConnectionClosed">
            <summary>
            Occurs when the connection to an <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/> has been closed, either client-side or server-side.
            </summary>
        </member>
        <member name="E:Narumikazuchi.Networking.Sockets.IClient`1.ConnectionEstablished">
            <summary>
            Occurs when the connection to an <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/> has been successfully established.
            </summary>
        </member>
        <member name="E:Narumikazuchi.Networking.Sockets.IClient`1.DataReceived">
            <summary>
            Occurs when the <see cref="P:Narumikazuchi.Networking.Sockets.IClient`1.DataProcessor"/> property is set to <see langword="null"/> and the <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/> receives <typeparamref name="TData"/> from it's connected <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/>.
            </summary>
            <remarks>
            This event will never get raised, if the <see cref="P:Narumikazuchi.Networking.Sockets.IClient`1.DataProcessor"/> property is set to a not-null object.
            </remarks>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.IClient`1.Port">
            <summary>
            Gets the port through which the <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/> is connected.
            </summary>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.IClient`1.BufferSize">
            <summary>
            Gets or sets the size of the <see cref="T:System.Byte"/> buffer.
            </summary>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.IClient`1.Guid">
            <summary>
            Gets the <see cref="T:System.Guid"/> that this <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/> is assigned to on it's connected <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/>.
            </summary>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.IClient`1.DataProcessor">
            <summary>
            Gets or sets the <see cref="T:Narumikazuchi.Networking.Sockets.IClientDataProcessor`1"/> for this <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/>.
            </summary>
            <remarks>
            The <see cref="T:Narumikazuchi.Networking.Sockets.IClientDataProcessor`1"/> provides the <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/> with the functionality to process incoming data.
            If this property is not set, the <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/> will instead raise the <see cref="E:Narumikazuchi.Networking.Sockets.IClient`1.DataReceived"/> event every time new data will be received.
            </remarks>
        </member>
        <member name="T:Narumikazuchi.Networking.Sockets.IClientDataProcessor`1">
            <summary>
            Represents an object which process any <typeparamref name="TData"/> that the associated <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/> receives.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.IClientDataProcessor`1.ProcessReceivedData(`0)">
            <summary>
            Process the specified <typeparamref name="TData"/> which this method recevied from it's associated <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/>.
            </summary>
            <param name="data">The data received by the associated <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/>.</param>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.IClientDataProcessor`1.Disconnect">
            <summary>
            Disconnects the associated <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/> from the <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/> it is connected to.
            </summary>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.IClientDataProcessor`1.Client">
            <summary>
            Gets or sets the associated <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/>.
            </summary>
        </member>
        <member name="T:Narumikazuchi.Networking.Sockets.IServer`1">
            <summary>
            Represents the base functionality of a socket server.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.IServer`1.Start">
            <summary>
            Starts the <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/> and enables <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/> objects to connect to it.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.IServer`1.Stop">
            <summary>
            Stops the <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/> and closes the connection to all connected <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/> objects.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.IServer`1.Disconnect(System.Guid@)">
            <summary>
            Disconnects the <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/> who is associated with the specified <see cref="T:System.Guid"/>.
            </summary>
            <param name="guid">The guid the client is associated with.</param>
            <returns><see langword="true"/> if the client was disconnected; otherwise, <see langword="false"/></returns>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.IServer`1.Send(`0,System.Guid@)">
            <summary>
            Sends the specified <typeparamref name="TData"/> to the <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/> associated with the specified <see cref="T:System.Guid"/>.
            </summary>
            <param name="data">The data to send.</param>
            <param name="client">The guid the client is associated with.</param>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.IServer`1.Broadcast(`0)">
            <summary>
            Sends the specified <typeparamref name="TData"/> to the all connected <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/> objects.
            </summary>
            <param name="data">The data to send.</param>
        </member>
        <member name="E:Narumikazuchi.Networking.Sockets.IServer`1.ClientConnected">
            <summary>
            Occurs when a new <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/> connected with the <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/>.
            </summary>
        </member>
        <member name="E:Narumikazuchi.Networking.Sockets.IServer`1.ClientDisconnected">
            <summary>
            Occurs when an <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/> has been disconnected from the <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/>, either through <see cref="M:Narumikazuchi.Networking.Sockets.IServer`1.Disconnect(System.Guid@)"/> or from the client-side.
            </summary>
        </member>
        <member name="E:Narumikazuchi.Networking.Sockets.IServer`1.DataReceived">
            <summary>
            Occurs when the <see cref="P:Narumikazuchi.Networking.Sockets.IServer`1.DataProcessor"/> property is set to <see langword="null"/> and the <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/> receives <typeparamref name="TData"/> from one of it's connected <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/> objects.
            </summary>
            <remarks>
            This event will never get raised, if the <see cref="P:Narumikazuchi.Networking.Sockets.IServer`1.DataProcessor"/> property is set to a not-null object.
            </remarks>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.IServer`1.Port">
            <summary>
            Gets the port through which the <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/> is connected.
            </summary>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.IServer`1.BufferSize">
            <summary>
            Gets or sets the size of the <see cref="T:System.Byte"/> buffer.
            </summary>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.IServer`1.AcceptCondition">
            <summary>
            Gets or sets the condition for a new <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/> connection to be accepted.
            </summary>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.IServer`1.DataProcessor">
            <summary>
            Gets or sets the <see cref="T:Narumikazuchi.Networking.Sockets.IServerDataProcessor`1"/> for this <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/>.
            </summary>
            <remarks>
            The <see cref="T:Narumikazuchi.Networking.Sockets.IServerDataProcessor`1"/> provides the <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/> with the functionality to process incoming data.
            If this property is not set, the <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/> will instead raise the <see cref="E:Narumikazuchi.Networking.Sockets.IServer`1.DataReceived"/> event every time new data will be received.
            </remarks>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.IServer`1.Clients">
            <summary>
            Gets all associated <see cref="T:System.Guid"/> for the currently connected <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/> objects.
            </summary>
        </member>
        <member name="T:Narumikazuchi.Networking.Sockets.IServerDataProcessor`1">
            <summary>
            Represents an object which process any <typeparamref name="TData"/> that the associated <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/> receives.
            </summary>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.IServerDataProcessor`1.ProcessReceivedData(`0,System.Guid@)">
            <summary>
            Process the specified <typeparamref name="TData"/> which this method recevied from it's associated <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/>.
            </summary>
            <param name="data">The data received by the associated <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/>.</param>
            <param name="fromClient">The guid of the associated <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/>.</param>
        </member>
        <member name="M:Narumikazuchi.Networking.Sockets.IServerDataProcessor`1.DisconnectClient(System.Guid@)">
            <summary>
            Disconnects the <see cref="T:Narumikazuchi.Networking.Sockets.IClient`1"/> associated with the specified <see cref="T:System.Guid"/> from the associated <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/>.
            </summary>
        </member>
        <member name="P:Narumikazuchi.Networking.Sockets.IServerDataProcessor`1.Server">
            <summary>
            Gets or sets the associated <see cref="T:Narumikazuchi.Networking.Sockets.IServer`1"/>.
            </summary>
        </member>
    </members>
</doc>
